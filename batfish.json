{
    "name": "batfish",
    "author": "jmc",
    "version": 1.0,
    "categories": [
        "networking",
        "firewalls",
        "routing"
    ],
    "description": "Run api commands against a Batfish service to precalculate and validate routing policy and firewall rules",
    "icon": null,
    "requirements": {
        "jimi_min_version": null,
        "jimi_max_version": null,
        "plugins": []
    },
    "collections": {},
    "triggers": {},
    "actions": {
        "batfish": {
            "display_name": "batfish",
            "className": "_batfish",
            "class_location": "models.action",
            "description": "Batfish Routing Questions",
            "fields": [
                {
                    "schema_item": "src_ip",
                    "schema_value": "src_ip",
                    "type": "input",
                    "label": "Source IP Address / Source Network",
                    "description": "Source IP or Network to be queried",
                    "required": true,
                    "jimi_syntax": false
                },
                {
                    "schema_item": "dst_ip",
                    "schema_value": "dst_ip",
                    "type": "input",
                    "label": "Destination IP address / Destination Network",
                    "description": "Destination IP or Network to be queried",
                    "required": true,
                    "jimi_syntax": false
                },
                {
                    "schema_item": "dst_port",
                    "schema_value": "dst_port",
                    "type": "input",
                    "label": "Destination Port / Destination App / Destination Service",
                    "description": "Destination Port / Destination Application",
                    "required": true,
                    "jimi_syntax": false
                },
                {
                    "schema_item": "BATFISH_SERVER",
                    "schema_value": "BATFISH_SERVER",
                    "type": "input",
                    "label": "Batfish Server IP",
                    "description": "Batfish Server IP",
                    "required": true,
                    "jimi_syntax": false
                },
                {
                    "schema_item": "BATFISH_NETWORK",
                    "schema_value": "BATFISH_NETWORK",
                    "type": "input",
                    "label": "Batfish Network Snapshot Name",
                    "description": "Arbitrary name for the Network snapshots/configs",
                    "required": false,
                    "jimi_syntax": false
                },
                {
                    "schema_item": "device_type",
                    "schema_value": "device_type",
                    "type": "input",
                    "label": "Device Type",
                    "description": "FIREWALL, ROUTER, IPTABLES",
                    "required": false,
                    "jimi_syntax": false
                }
            ],
            "data_out": {
                "result": {
                    "description": "Determines if the given action was successful.",
                    "type": "boolean",
                    "always_present": true,
                    "values": {
                        "True": {
                            "description": "Action completed successfully."
                        },
                        "False": {
                            "description": "Action was unsuccessful."
                        }
                    }
                },
                "rc": {
                    "description": "Returns the provided rc field value.",
                    "type": "number",
                    "always_present": true,
                    "values": {
                        "(number)": {
                            "description": "The integer provided within the rc field."
                        }
                    }
                },
                "data": {
                    "description": "Outputs any returned data from the executed process",
                    "type": "text",
                    "always_present": false,
                    "values": {
                        "(string)": {
                            "description": "The returned data from the routing query"
                        }
                    }
                }
            }
        }
    },
    "settings": {}
}